@using Microsoft.Extensions.DependencyInjection
@using Whyvra.Tunnel.Presentation.Services
@using Whyvra.Tunnel.Common.Models

@inject IOptions<AuthenticationOptions> Auth
@inject IServiceProvider Services
@inject ServerService ServerService

@page "/servers"

<div style="padding-bottom: 1em; text-align: right;">
    <button class="button is-success is-rounded">
        <span class="icon">
            <i class="fas fa-plus"></i>
        </span>
        <span>New server</span>
    </button>
</div>

<div class="tile is-ancestor">
    @foreach (var server in _servers)
    {
        <div class="tile is-parent is-4 serverbox" @onclick="@(() => Pop(server.Id))">
            <article class="tile is-child box">
                <p class="title">@server.Name</p>
                <p class="subtitle">@server.Description</p>
            </article>
        </div>
    }
</div>

    @if (_showServerPopup && _serverId.HasValue)
    {
        <ServerForm ServerId="@_serverId.Value" CloseAction="ClosePopup" />
    }

@code
{
    private bool _showServerPopup = false;
    private IEnumerable<ServerDto> _servers = new ServerDto[0];
    private int? _serverId = null;

    protected override async Task OnInitializedAsync()
    {
        // Check if authentication is enabled
        if (Auth.Value.Enabled)
        {
            var provider = Services.GetService<AuthenticationStateProvider>();
            var state = await provider.GetAuthenticationStateAsync();
            
            // Only query servers if authenticated
            if (state.User.Identity.IsAuthenticated)
            {
                _servers = await ServerService.GetAll();
            }
        }
        else
        {
            _servers = await ServerService.GetAll();
        }
    }

    private void Pop(int serverId)
    {
        // Set server id
        _serverId = serverId;

        // Show popup
        _showServerPopup = true;
    }

    private async Task ClosePopup(bool updated)
    {
        if (updated) _servers = await ServerService.GetAll();
        _showServerPopup = false;
    }
}