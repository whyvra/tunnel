@inject IOptions<AuthOptions> Auth
@inject NavigationManager NavigationManager

@if (Auth.Value.Enabled)
{
    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(Program).Assembly">
            <Found Context="routeData">
                <AuthorizeView Policy="WireGuard">
                    <Authorized>
                        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" ></RouteView>
                    </Authorized>
                    <NotAuthorized>
                        @if (IsPageAllowed())
                        {
                            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"></RouteView>
                        }
                        else
                        {
                            <LayoutView Layout="@typeof(MainLayout)">
                                <h1 class="title">
                                    Unauthorized
                                </h1>
                                <p class="subtitle">
                                    Sorry, looks like you can't see this page
                                </p>
                            </LayoutView>
                        }
                    </NotAuthorized>
                </AuthorizeView>
                
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <h1 class="title">
                        Not Found
                    </h1>
                    <p class="subtitle">
                        Sorry, there's nothing at this address
                    </p>
                </LayoutView>
            </NotFound>
        </Router>

        
    </CascadingAuthenticationState>
}
else
{
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <h1 class="title">
                    Not Found
                </h1>
                <p class="subtitle">
                    Sorry, there's nothing at this address
                </p>
            </LayoutView>
        </NotFound>
    </Router>
}

@code
{
    private bool IsPageAllowed()
    {
        var relative = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        var isAllowed = relative.Trim().Length == 0 || relative.StartsWith("authentication");

        return isAllowed;
    }
}