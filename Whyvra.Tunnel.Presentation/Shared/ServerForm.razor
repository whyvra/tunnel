@using Whyvra.Blazor.Forms.Renderer

@if (IsLoading)
{
    <div class="modal is-active">
        <div class="modal-background"></div>
        <div class="modal-content modal-loader">
            <button class="button is-loading is-large"></button>
        </div>
    </div>
} 
else if (FormModel != null)
{
    @if(ShowDeleteConfirm)
    {
        <Modal Icon="trash-alt" IconCss="has-text-danger" ModalCss="z-index: 45;" OnClose="@(() => ShowDeleteConfirm = false)" Title="Confirm deletion">
            <ChildContent>
                <p>
                    Are you sure you want to delete server @FormModel.DataModel.Server.Name ?
                    All it's data along with its clients configuration will be lost!
                </p>
            </ChildContent>
            <Buttons>
                <button class="button is-success" @onclick="ProcessDelete">
                    <span class="icon">
                        <i class="fas fa-check"></i>
                    </span>
                    <span>Yes</span>
                </button>
                <button class="button is-danger" @onclick="@(() => ShowDeleteConfirm = false)">
                    <span class="icon">
                        <i class="fas fa-times"></i>
                    </span>
                    <span>No</span>
                </button>
            </Buttons>
        </Modal>
    }
    <Modal Icon="info-circle" IconCss="has-text-info" OnClose="InvokeClose" Title="Server info">
        <ChildContent>
            @if (Notification.IsVisible)
            {
                <Notification NotificationDto="@Notification" OnClose="@(() => Notification.IsVisible = false)"></Notification>
            }
            <BulmaForm @ref="Form" FormModel="@FormModel" FormViewMode="@FormViewMode"></BulmaForm>
        </ChildContent>
        <Buttons>
            @if (FormViewMode == FormViewMode.Readonly)
            {
                <button class="button is-warning" @onclick="@(() => FormViewMode = FormViewMode.Edit)">
                    <span class="icon">
                        <i class="fas fa-pencil-alt"></i>
                    </span>
                    <span>Edit</span>
                </button>
            }
            @if (FormViewMode != FormViewMode.Readonly)
            {
                <button class="button is-primary" @onclick="SaveChanges">
                    <span class="icon">
                        <i class="fas fa-save"></i>
                    </span>
                    <span>Save changes</span>
                </button>
            }
            @if (FormViewMode != FormViewMode.Blank)
            {
                <button class="button is-danger" @onclick="@(() => ShowDeleteConfirm = true)">
                    <span class="icon">
                        <i class="fas fa-trash-alt"></i>
                    </span>
                    <span>Delete</span>
                </button>
            }
            <button class="button" @onclick="InvokeClose">
                <span class="icon">
                    <i class="fas fa-times"></i>
                </span>
                <span>Cancel</span>
            </button>
        </Buttons>
    </Modal>
}

@code
{
    private async Task InvokeClose()
    {
        await CloseAction.InvokeAsync(false);
    }
}